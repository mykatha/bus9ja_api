const fs = require('fs');
const mongoose = require('mongoose');
const colors = require('colors');
const dotenv = require('dotenv');

//Load env var
dotenv.config({ path: './config/config.env'});

//Load models
const BusCompanie = require('./models/BusCompanie');
const Trip = require('./models/Trip');
const User = require('./models/User');
const Review = require('./models/Review');

//connect to DB
mongoose.connect(process.env.MONGO_URI, {
    useNewUrlParser: true,
    useCreateIndex: true,
    useFindAndModify: false,
    useUnifiedTopology: true
});

// Read JSON files
const busCompanies = JSON.parse(
    fs.readFileSync(`${__dirname}/_data/busCompanies.json`, 'utf-8')
);

const Trips =JSON.parse(
    fs.readFileSync(`${__dirname}/_data/tips.json`, 'utf-8')
);

const users = JSON.parse(
    fs.readFileSync(`${__dirname}/_data/users.json`, 'utf-8')
);

const reviews = JSON.parse(
    fs.readFileSync(`${__dirname}/_data/reviews`, 'utf-8')
);

//import into DB
const importData = async () => {
    try {
        await BusCompanie.create(busCompanies);
        await Trips.create(trips);
        await Users.create(users);
        await Reviews.create(reviews);
        console.log('Data imported ...' .green.inverse);
        process.exit();
    } catch (err) {
        console.error(err);
    }
};

// Delete Data
const deleteData = async () => {
    try {
        await BusCompanie.deleteMany();
        await Trip.deleteMany();
        await User.deleteMany();
        await Review.deleteMany();
        console.log('Data Destroyed...' .red.inverse);
        process.exit();
    } catch (err) {
        console.error(err);
    }
};

if (process.argv[2] === '-1') {
    importData();
}else if (process.argv[2] === 'd') {
    deleteData();
}
